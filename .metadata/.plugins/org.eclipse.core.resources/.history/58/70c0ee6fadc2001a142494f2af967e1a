package dictionaries_hashmaps;

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class TwoStrings {

    // Complete the twoStrings function below.
    static String twoStrings(String s1, String s2) {
    	class Hashtable{
    		LinkedList[] data;
    		public Hashtable(int length) {
    			data = new LinkedList[length/2];
    		}

    		void put(char key) {
    			int hashcode = key;
    			int index = convertoToIndex(hashcode);
    			if (data[index] == null) {
    				data[index] = new LinkedList<Integer>();
    			}
    			LinkedList list = data[index];
    			list.add(key);
    		}
    		
    		boolean get(char key) {
    			int hashcode = key;
    			int index = convertoToIndex(hashcode);
    			if(data[index].contains(key)) {
    				data[index].removeFirstOccurrence(key);
    				return true;
    			}else {
    				return false;
    			}
    		}
    		
    		private int convertoToIndex(int hashcode) {
    			return Math.abs(hashcode%this.data.length);
    		}
    		
    	}
    	String maior;
    	String menor;
    	if(s1.length()>s2.length()) {
    		maior = s1;
    		menor = s2;
    	}else {
    		maior = s2;
    		menor = s1;
    	}
    	Hashtable palavra = new Hashtable(maior.length());
    	for(int i = 0; i < maior.length(); i++) {
    		palavra.put(maior.charAt(i));
    	}
    	for(int i = 0; i < menor.length(); i++) {
    		if(palavra.get(menor.charAt(i)) == true) {
    			return "YES";
    		}
    	}
    	return "NO";
    

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String s1 = scanner.nextLine();

            String s2 = scanner.nextLine();

            String result = twoStrings(s1, s2);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
