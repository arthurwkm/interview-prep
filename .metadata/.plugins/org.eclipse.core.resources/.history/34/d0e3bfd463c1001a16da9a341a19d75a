package arrays;

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class NewYearChaos {

	// Complete the minimumBribes function below.
	static void minimumBribes(int[] q) {
		int bribes = 0;
		int [] original = new int[q.length];
		for (int i = 0; i < q.length; i++) {
			original[i] = i;
		}
		boolean too_chaotic = false;
		for (int i = 0; i < q.length; i++) {
			if((q[i]-1)-i>2) {
				//se qualquer numero estiver mais de 2 posições a frente o estado
				//é invalido já que requer ter passado mais de 2 pessoas e só se pode mover pra frente
				too_chaotic = true;
			}else {
				//minimo de bribes é o caso de assumir que só quem se mexeu foi quem foi quem terminou na frente
				if(q[i]-1>i) {
					System.out.println("posiçao final:"+(i+1)+" posição original:"+(q[i])+" bribe:"+ ((q[i]-1)-i));
					bribes = bribes + (q[i]-1)-i;
					original[i] = q[i];
				}
			}
		}
		System.out.println();
		//System.out.println(bribes);
		if(too_chaotic) {
			System.out.println("Too chaotic");
		}else {
			for (int i = 0; i < q.length; i++) {
				if(original[i]!=q[i]) {
					for (int j = 0; j < q.length; j++) {
						if(q[j]==original[i]) {
							
							System.out.println("posiçao final:"+(i+1)+" posição original:"+(q[i])+" bribe:"+ Math.abs(i-j));
							bribes = bribes + Math.abs(i-j);
							break;
						}
					}
				}
			}

			System.out.println(bribes);
		}
	}

	private static final Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) {
		int t = scanner.nextInt();
		scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

		for (int tItr = 0; tItr < t; tItr++) {
			int n = scanner.nextInt();
			scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

			int[] q = new int[n];

			String[] qItems = scanner.nextLine().split(" ");
			scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

			for (int i = 0; i < n; i++) {
				int qItem = Integer.parseInt(qItems[i]);
				q[i] = qItem;
			}

			minimumBribes(q);
		}

		scanner.close();
	}
}
